{"version":3,"sources":["context/alert/alertContext.js","Components/Alert.js","context/gitHub/gitHubContext.js","Components/Navbar.js","Components/Search.js","Components/Card.js","pages/Home.js","pages/About.js","Components/repos.js","pages/Profile.js","context/actionTypes.js","context/alert/alertReducer.js","context/alert/alertState.js","context/gitHub/gitHubReducer.js","context/gitHub/gitHubState.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","className","type","role","text","aria-label","onClick","aria-hidden","GitHubContext","Navbar","user","React","console","log","exact","to","login","Search","show","github","useState","value","setValue","onsubmit","event","key","trim","searchUsers","onChange","e","target","placeholder","onKeyPress","Card","src","avatar_url","style","width","alt","Home","users","loading","map","v","k","About","Repos","repos","href","url","rel","name","Profile","match","getUser","getRepos","url_name","params","id","useEffect","company","location","bio","blog","html_url","followers","following","public_repos","public_gists","SHOW_ALERT","initialState","alertReducer","state","action","payload","AlertState","children","useReducer","dispatch","Provider","showAC","gitHubReducer","searchUsersAC","getReposAC","getUserAC","SetLoadingAC","x","GitHubState","withCred","process","a","setLoading","axios","response","data","items","clearUsers","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7cb5be7.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n\r\nexport const AlertContext=createContext()","import React, {useContext} from \"react\";\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\nconst Alert=()=>{\r\n\r\n    const {alert,hide} = useContext(AlertContext)\r\n    if(!alert)return null\r\n    return <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role={\"alert\"}>\r\n        {alert.text}\r\n        <button type={\"button\"} className={\"close\"} aria-label={\"Close\"} onClick={hide}>\r\n            <span aria-hidden={\"true\"}>&times;</span>\r\n        </button>\r\n\r\n    </div>\r\n}\r\nexport default Alert;","import {createContext} from \"react\";\r\n\r\n const GitHubContext=createContext()\r\nexport default GitHubContext;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport GitHubContext from '../context/gitHub/gitHubContext';\r\n\r\nconst Navbar = () => {\r\n  const { user } = React.useContext(GitHubContext);\r\n  console.log('navbar', user);\r\n  return (\r\n    <nav className={'navbar navbar-dark bg-primary navbar-expand-lg'}>\r\n      <div className={'navbar-brand'}>GH SEARCH</div>\r\n      <ul className={'navbar-nav'}>\r\n        <li className={'navbar-item'}>\r\n          <NavLink exact to={'/'} className={'nav-link'}>\r\n            HOME\r\n          </NavLink>\r\n        </li>\r\n        {user.login && (\r\n          <li className={'nav-item'}>\r\n            <NavLink to={`/profile/${user}`} className={'nav-link profile'}>\r\n              PROFILE\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        <li className={'nav-item'}>\r\n          <NavLink to={'/about'} className={'nav-link'}>\r\n            INFO\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {useContext, useState} from \"react\";\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport GitHubContext from \"../context/gitHub/gitHubContext\";\r\n\r\nconst Search = () => {\r\n    const {show,hide} = useContext(AlertContext)\r\n    const github=useContext(GitHubContext)\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    onsubmit = (event) => {\r\n        // console.log(event.key)\r\n        if (event.key !== 'Enter') {\r\n            return\r\n        }\r\n        if(value.trim()){\r\n            github.searchUsers(value.trim())\r\n            hide()\r\n            ///make req //\r\n        }else {\r\n            show('ENTER USER DATA')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className={\"form-group\"}>\r\n            <input className={\"form-control\"} value={value} onChange={(e)=>{setValue(e.target.value)}} type={\"text\"} placeholder={\"input user name\"} onKeyPress={onsubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n const Card=({user})=>{\r\n\r\n    return <div className={\"card\"}>\r\n        <img src={user.avatar_url} style={{width:'250px'}} alt={user.login} className={\"card-image-top\"}/>\r\n        <div className={\"card-body\"}>\r\n            <div className={\"card-title\"}>{user.login}</div>\r\n            <Link to={'/profile/'+user.login} className={\"btn btn-primary\"} >Open</Link>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default Card;","import React, {useContext} from \"react\";\r\nimport Search from '../Components/Search'\r\nimport Card from \"../Components/Card\";\r\nimport GitHubContext from \"../context/gitHub/gitHubContext\";\r\n\r\nconst Home = () => {\r\n    const {users, loading} = useContext(GitHubContext)\r\n\r\n    return (<>\r\n        <Search/>\r\n        <div className={\"row\"}>\r\n            {loading ? <p className={\"text-center\"}>Loading...</p> : users.map((v, k) => {\r\n                return <div className={\"col-sm-4 mb-4\"} key={k}>\r\n                    <Card user={v}></Card>\r\n                </div>\r\n            })}\r\n\r\n\r\n        </div>\r\n\r\n    </>)\r\n}\r\nexport default Home","import React from \"react\";\r\n\r\n const About=()=>{\r\n    return <div className=\"jumbotron \">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">INFORMATION</h1>\r\n                <p className=\"lead\">APP VERSION 0.0.1</p>\r\n            </div>\r\n        </div>\r\n\r\n}\r\nexport default About","import React from \"react\";\r\n\r\nconst Repos=({repos})=>{\r\n    return <>\r\n        {repos.map((v,k)=>{\r\n            return <div className={\"card mb-3\"} key={k}>\r\n                <div className={\"card-body\"}>\r\n                    <h5><a href={v.url} rel={\"noopener noreferrer\"} target={\"_blank\"}>{v.name}</a></h5>\r\n                </div>\r\n            </div>\r\n        })}\r\n    </>\r\n\r\n}\r\nexport default Repos","import React, { useContext, useEffect } from 'react';\r\nimport GitHubContext from '../context/gitHub/gitHubContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../Components/repos';\r\n\r\nconst Profile = ({ match }) => {\r\n  const { getUser, getRepos, user, repos, loading } = useContext(GitHubContext);\r\n  const url_name = match.params.id;\r\n\r\n  useEffect(() => {\r\n    getUser(url_name);\r\n    getRepos(url_name);\r\n  }, []);\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n  } = user;\r\n  // if (loading) {\r\n  //     return <p className={\"text-center\"}>Loading...</p>\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Link to={'/home'}>to home page</Link>\r\n      <div className={'card mb-4'}>\r\n        <div className={'card-body'}>\r\n          <div className={'row'}>\r\n            <div className={'col-sm-3 text-center'}>\r\n              <img src={avatar_url} style={{ width: '250px' }} />\r\n              <h1>{name}</h1>\r\n              {location && <p>Location:{location}</p>}\r\n            </div>\r\n            <div className={'col'}>\r\n              {bio && (\r\n                <>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </>\r\n              )}\r\n              <a href={html_url} target={'_blank'} className={'btn btn-dark'}>\r\n                Open profile\r\n              </a>\r\n              <ul>\r\n                {login && (\r\n                  <li>\r\n                    <strong>Username:{login}</strong>\r\n                  </li>\r\n                )}\r\n                {company && (\r\n                  <li>\r\n                    <strong>Company:{company}</strong>\r\n                  </li>\r\n                )}\r\n                {blog && (\r\n                  <li>\r\n                    <strong>Blog:{blog}</strong>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <div className={'badge badge-primary'}>Subscribers:{followers}</div>\r\n              <div className={'badge badge-success'}>Subscribed:{following}</div>\r\n              <div className={'badge badge-info'}>Public repos:{public_repos}</div>\r\n              <div className={'badge badge-dark'}>Public gists:{public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","export const SHOW_ALERT = \"alert/SHOW_ALERT\"\r\nexport const HIDE_ALERT = \"alert/HIDE_ALERT\"\r\nexport const GET_USER = \"GH/GET_USERS\"\r\nexport const CLEAR_USERS = \"GH/CLEAR_USERS\"\r\nexport const GET_REPOS = \"GH/GET_REPOS\"\r\nexport const SEARCH_USERS = \"GH/SEARCH_USERS\"\r\nexport const SET_LOADING = \"GH/SET_LOADING\"","import {SHOW_ALERT} from '../actionTypes'\r\nimport {HIDE_ALERT} from '../actionTypes'\r\n// const handlers = {\r\n//     [SHOW_ALERT]: (state, action) => action.payload,\r\n//     [HIDE_ALERT]: () => null,\r\n//     Default: state => state\r\n// }\r\n//\r\n// const alertReducer = (state, action) => {\r\n//     const handler = handlers[action.type] || handlers.Default\r\n//     return handler(state, action)\r\n//\r\n//\r\n// }\r\n\r\nconst initialState={\r\n    text:null\r\n}\r\n\r\nconst alertReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALERT:\r\n            return {...state, text:action.payload.text}\r\n        case HIDE_ALERT:\r\n            return null\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const hideAC = () => {\r\n    return {type: HIDE_ALERT}\r\n}\r\n\r\nexport const showAC = (text, type = \"secondary\") => {\r\n    return {\r\n        type: SHOW_ALERT,\r\n        payload: {text: text, type: type}\r\n    }\r\n}\r\n\r\nexport default alertReducer;","import React, {useReducer} from \"react\";\r\nimport {AlertContext} from \"./alertContext\";\r\nimport alertReducer, {hideAC,showAC} from \"./alertReducer\";\r\n\r\nconst AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n    const hide = () => dispatch(hideAC())\r\n    const show = (text) => dispatch(showAC(text))\r\n\r\n    return (\r\n        <AlertContext.Provider value={{hide,show,alert:state}}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\nexport default AlertState","\r\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from '../actionTypes';\r\n\r\nconst initialState={\r\n    user:null,\r\n    loading:false,\r\n    users:null,\r\n    repos:null,\r\n\r\n}\r\n\r\nexport const gitHubReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case SEARCH_USERS:return {...state,users:action.payload,loading:false};\r\n        case GET_REPOS: return {...state,repos: action.payload};\r\n        case GET_USER: return {...state,user: action.payload};\r\n        case CLEAR_USERS:return {...state,users: null};\r\n        case SET_LOADING:return {...state,loading: action.payload}\r\n        default:return state;\r\n    }\r\n}\r\n\r\nexport const searchUsersAC=(users)=>{\r\n    return {\r\n        type:SEARCH_USERS,\r\n        payload:users\r\n    }\r\n}\r\n\r\nexport const getReposAC=(repos)=>{\r\n    return {\r\n        type:GET_REPOS,\r\n        payload:repos\r\n    }\r\n}\r\nexport const getUserAC=(user)=>{\r\n    return {\r\n        type:GET_USER,\r\n        payload:user\r\n    }\r\n}\r\n\r\n\r\nexport const clearUsersAC=()=>{\r\n    return {\r\n        type:CLEAR_USERS,\r\n    }\r\n}\r\n\r\nexport const SetLoadingAC=(x)=>{\r\n    return {\r\n        type:SET_LOADING,\r\n        payload:x\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport * as axios from 'axios';\r\nimport GitHubContext from './gitHubContext';\r\nimport {\r\n  clearUsersAC,\r\n  getReposAC,\r\n  getUserAC,\r\n  gitHubReducer,\r\n  searchUsersAC,\r\n  SetLoadingAC,\r\n} from './gitHubReducer';\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst GitHubState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(gitHubReducer, { users: [], user: {}, repos: [] });\r\n  const { user, users, repos, loading } = state;\r\n  const withCred = (url) => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n  };\r\n\r\n  const searchUsers = async (users) => {\r\n    setLoading(true);\r\n    const response = await axios.get(withCred(`https://api.github.com/search/users?q=${users}&`));\r\n    dispatch(searchUsersAC(response.data.items));\r\n    setLoading(false);\r\n  };\r\n\r\n  const getUser = async (name = 'CocoGrub') => {\r\n    setLoading(true);\r\n    const response = await axios.get(withCred(`https://api.github.com/users/${name}?`));\r\n    dispatch(getUserAC(response.data));\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRepos = async (name) => {\r\n    setLoading(true);\r\n    const response = await axios.get(withCred(`https://api.github.com/users/${name}/repos?`));\r\n    dispatch(getReposAC(response.data));\r\n    setLoading(false);\r\n  };\r\n\r\n  const clearUsers = async () => {\r\n    dispatch(clearUsersAC());\r\n  };\r\n\r\n  const setLoading = async (x) => {\r\n    dispatch(SetLoadingAC(x));\r\n  };\r\n  return (\r\n    <GitHubContext.Provider\r\n      value={{\r\n        searchUsers,\r\n        getUser,\r\n        getRepos,\r\n        clearUsers,\r\n        setLoading,\r\n        user,\r\n        users,\r\n        repos,\r\n        loading,\r\n      }}>\r\n      {children}\r\n    </GitHubContext.Provider>\r\n  );\r\n};\r\nexport default GitHubState;\r\n","import React from \"react\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Profile from \"./pages/Profile\";\nimport AlertState from \"./context/alert/alertState\";\nimport GitHubState from \"./context/gitHub/gitHubState\";\n\nconst App = () => {\n  return (\n    <GitHubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: `alert` }} />\n            <Switch>\n              <Route exact path=\"/\">\n                {\" \"}\n                <Home />{\" \"}\n              </Route>\n              <Route path=\"/about\">\n                <About />{\" \"}\n              </Route>\n              <Route path={\"/profile/:id\"} component={Profile}></Route>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GitHubState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}